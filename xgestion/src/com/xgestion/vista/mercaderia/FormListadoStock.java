/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xgestion.vista.mercaderia;

import boxTools.TableCellListener;
import com.xgestion2.entities.maestros.Familia;
import com.xgestion2.entities.maestros.Producto;
import com.xgestion2.entities.maestros.Proveedor;
import com.xgestion2.entities.maestros.Subfamilia;
import com.xgestion2.entities.maestros.Sucursal;
import com.xgestion2.entities.maestros.Ubicacion;
import com.xgestion2.repository.FamiliaRepository;
import com.xgestion2.repository.ProductoRepository;
import com.xgestion2.repository.ProveedorRepository;
import com.xgestion2.repository.SubfamiliaRepository;
import com.xgestion2.repository.SucursalRepository;
import com.xgestion2.repository.UbicacionRepository;
import com.xgestion2.util.ExcelAdapter;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.JXTable;
import xgestion.FormPrincipal;

/**
 *
 * @author dario
 */
public class FormListadoStock extends javax.swing.JInternalFrame {

    private String titulo;
    private final ProveedorRepository proveedorRepo = new ProveedorRepository();
    private final UbicacionRepository ubicacionRepo = new UbicacionRepository();
    private final FamiliaRepository familiaRepo = new FamiliaRepository();
    private final SubfamiliaRepository subfamiliaRepo = new SubfamiliaRepository();
    private final ProductoRepository productoRepo = new ProductoRepository();
    private final SucursalRepository sucursalRepo = new SucursalRepository();
    
    public FormListadoStock() {
        this.titulo = "Lista de Stocks";
        initComponents();
        pueblaComboBoxes();
        atajoTeclas();
        poblarTabla("");
        
        ExcelAdapter adaptadorExcel = new ExcelAdapter(tabla);
        dependenciaComboFamilia();
        eventoCalculadorPrecio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new org.jdesktop.swingx.JXTable();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabelEsquina = new javax.swing.JLabel();
        jTextBuscar = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comboFamilia = new javax.swing.JComboBox();
        comboSubfamilia = new javax.swing.JComboBox();
        comboUbicacion = new javax.swing.JComboBox();
        comboProveedor = new javax.swing.JComboBox();
        comboSucursal = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle(this.titulo);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/util/images/favicon.png"))); // NOI18N
        setName(""); // NOI18N
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        tabla.setBackground(new java.awt.Color(153, 204, 255));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Modificado", "Id", "Producto", "Precio Costo", "Ganancia", "Precio Venta", "Precio Costo 2", "Ganancia 2", "Precio Venta 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setCellSelectionEnabled(true);
        tabla.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tabla.setRowHeight(25);
        jScrollPane1.setViewportView(tabla);

        jPanel1.add(jScrollPane1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setMinimumSize(new java.awt.Dimension(889, 50));
        jLayeredPane1.setOpaque(true);

        jLabelEsquina.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelEsquina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/util/images/esquina.png"))); // NOI18N
        jLabelEsquina.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jTextBuscar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextBuscar.setToolTipText("Buscar");
        jTextBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextBuscarKeyReleased(evt);
            }
        });

        jButtonBuscar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/util/images/ico35Buscar3.png"))); // NOI18N
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(this.titulo);

        comboFamilia.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        comboFamilia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboSubfamilia.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        comboSubfamilia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboUbicacion.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        comboUbicacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboProveedor.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        comboProveedor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboSucursal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        comboSucursal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jLabelEsquina, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(comboSucursal, 0, 147, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboProveedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboFamilia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(comboSubfamilia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboUbicacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jTextBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(3, 3, 3))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jLabelEsquina)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(comboSucursal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSubfamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextBuscar)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jLayeredPane1.setLayer(jLabelEsquina, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTextBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButtonBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(comboFamilia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(comboSubfamilia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(comboUbicacion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(comboProveedor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(comboSucursal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jLayeredPane1, java.awt.BorderLayout.PAGE_START);

        jButton1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/util/images/ico35Birome.png"))); // NOI18N
        jButton1.setMnemonic('P');
        jButton1.setText("PROCESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(800, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
         poblarTabla(jTextBuscar.getText());
    }//GEN-LAST:event_formFocusGained

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        
    }//GEN-LAST:event_formKeyReleased

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        poblarTabla(jTextBuscar.getText());
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jTextBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextBuscarKeyReleased
        // TODO add your handling code here:
        poblarTabla(jTextBuscar.getText());
    }//GEN-LAST:event_jTextBuscarKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Está seguro que desea actualizar los precios?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
               
                for (int i = 0; i < tabla.getRowCount(); i++) {
                    
                    if(Boolean.valueOf(tabla.getValueAt(i, 0)+"")){
                        Long id                     = Long.valueOf(tabla.getValueAt(i, 1)+"");
                        Double precioCosto          = Double.parseDouble((String.valueOf(tabla.getValueAt(i, 3))).replace(",", ""));
                        Integer porcantejaGanancia  = Integer.valueOf((String.valueOf(tabla.getValueAt(i, 4))).replace(",", ""));
                        Double precioVenta          = Double.parseDouble((String.valueOf(tabla.getValueAt(i, 5))).replace(",", "")); 
                        Double precioCosto2         = Double.parseDouble((String.valueOf(tabla.getValueAt(i, 6))).replace(",", ""));
                        Integer porcantejaGanancia2 = Integer.valueOf((String.valueOf(tabla.getValueAt(i, 7))).replace(",", ""));
                        Double precioVenta2         = Double.parseDouble((String.valueOf(tabla.getValueAt(i, 8))).replace(",", ""));
                        
                        productoRepo.modificarPrecio(id, precioCosto, porcantejaGanancia, precioVenta, precioCosto2, porcantejaGanancia2,precioVenta2);
                    }
                }
                JOptionPane.showMessageDialog(null, "Completado");
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void poblarTabla(String texto){
        
        String[] familia    = comboFamilia.getSelectedItem().toString().split("-");
        String[] subfamilia = comboSubfamilia.getSelectedItem().toString().split("-");
        String[] ubicacion  = comboUbicacion.getSelectedItem().toString().split("-");
        String[] proveedor  = comboProveedor.getSelectedItem().toString().split("-");
        String[] sucursal   = comboSucursal.getSelectedItem().toString().split("-");
        
        Familia fam = null;
        Subfamilia subfam = null;
        Ubicacion ubi = null;
        Proveedor prov = null;
        Sucursal sucu = null;
        
        if(!familia[0].isEmpty() && Integer.valueOf(familia[0])!=0)
            fam = familiaRepo.get(Long.valueOf(familia[0]));
        if(!subfamilia[0].isEmpty() && Integer.valueOf(subfamilia[0])!=0)
            subfam = subfamiliaRepo.get(Long.valueOf(subfamilia[0]));
        if(!ubicacion[0].isEmpty() && Integer.valueOf(ubicacion[0])!=0)
            ubi = ubicacionRepo.get(Long.valueOf(ubicacion[0]));
        if(!proveedor[0].isEmpty() && Integer.valueOf(proveedor[0])!=0)
            prov = proveedorRepo.get(Long.valueOf(proveedor[0]));
        if(!sucursal[0].isEmpty() && Integer.valueOf(sucursal[0])!=0)
            sucu = sucursalRepo.get(Long.valueOf(sucursal[0]));
        
        ProductoRepository a = new ProductoRepository();
        List<Producto> x = null;
        
        x = a.getAll(texto,fam,subfam,ubi,prov);
 
        
        //CABECERA TABLA
        Object[] columnNames = {"Modificado", "Id", "Producto", "Lote Habitual", "Stock Minimo", "Stock", "Stock Anterior"};
        
        //CUERPO TABLA
        DefaultTableModel model = new DefaultTableModel(new Object[0][0], columnNames)
        {
           Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        
        //POBLAR REGISTROS
        for (Producto s : x) {
            Object[] o = new Object[9];
            o[0] = false;
            o[1] = s.getId();
            o[2] = s.getNombre();
            o[3] = s.getPrecioCosto();
            o[4] = s.getGanancia();
            o[5] = s.getPrecioVenta();
            o[6] = s.getPrecioCosto2();
            o[7] = s.getGanancia2();
            o[8] = s.getPrecioVenta2();
            model.addRow(o);
        }
        
        tabla.setModel(model);
         //render para doubles
        tabla.getColumnModel().getColumn(3).setCellRenderer(new DecimalFormatRenderer() );
        tabla.getColumnModel().getColumn(4).setCellRenderer(new DecimalFormatRenderer() );
        tabla.getColumnModel().getColumn(5).setCellRenderer(new DecimalFormatRenderer() );
        tabla.getColumnModel().getColumn(6).setCellRenderer(new DecimalFormatRenderer() );
        tabla.getColumnModel().getColumn(7).setCellRenderer(new DecimalFormatRenderer() );
        tabla.getColumnModel().getColumn(8).setCellRenderer(new DecimalFormatRenderer() );

        repaint();
        revalidate();
    }

    public final void atajoTeclas(){
        InputMap map = this.getInputMap(WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
	map.put(KeyStroke.getKeyStroke(title).getKeyStroke(KeyEvent.VK_ESCAPE, 0),"salir");
	//SALIR
	this.getActionMap().put("salir", new AbstractAction(){
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
    	});
    }
    
    public void pueblaComboBoxes(){
        List<Familia> familias = familiaRepo.getAllActivos();
        comboFamilia.removeAllItems();
        comboFamilia.addItem("0-TODOS");
        for (Familia a : familias) {
            comboFamilia.addItem(a.getId()+"-"+a.getNombre());
        }
        
        List<Subfamilia> subfamilias = subfamiliaRepo.getAllActivos();
        comboSubfamilia.removeAllItems();
        comboSubfamilia.addItem("0-TODOS");
        for (Subfamilia b : subfamilias) {
            comboSubfamilia.addItem(b.getId()+"-"+b.getNombre());
        }
        
        List<Ubicacion> ubicaciones = ubicacionRepo.getAllActivos();
        comboUbicacion.removeAllItems();
        comboUbicacion.addItem("0-TODOS");
        for (Ubicacion d : ubicaciones) {
            comboUbicacion.addItem(d.getId()+"-"+d.getNombre());
        }
        
        List<Proveedor> proveedores = proveedorRepo.getAllActivos();
        comboProveedor.removeAllItems();
        comboProveedor.addItem("0-TODOS");
        for (Proveedor e : proveedores) {
            comboProveedor.addItem(e.getId()+"-"+e.getNombre());
        }
        
        List<Sucursal> sucursales = sucursalRepo.getAllActivos();
        comboSucursal.removeAllItems();
        comboSucursal.addItem("0-TODAS");
        for (Proveedor e : proveedores) {
            comboSucursal.addItem(e.getId()+"-"+e.getNombre());
        }

        repaint();
        revalidate();
    }
    
    public void eventoCalculadorPrecio(){
        //EVENTO PARA CAMBIO DE VALORES EN CELDAS
        Action action = new AbstractAction()
        {
            private static final long serialVersionUID = 1L;

            public void actionPerformed(ActionEvent e)
            {
                @SuppressWarnings("unused")
                TableCellListener tcl = (TableCellListener)e.getSource();

                int rowIndex = tabla.getSelectedRow();
                String precioCosto = ""+tabla.getModel().getValueAt(rowIndex, 3);
                String gananciaTabla1 = ""+tabla.getModel().getValueAt(rowIndex, 4);
                String resultado = ""+tabla.getModel().getValueAt(rowIndex, 5);
                String precioCosto2 = ""+tabla.getModel().getValueAt(rowIndex, 6);
                String gananciaTabla2 = ""+tabla.getModel().getValueAt(rowIndex, 7);
                String resultado2 = ""+tabla.getModel().getValueAt(rowIndex, 8);

                System.out.println(precioCosto+" "+gananciaTabla1+" "+resultado+" "+precioCosto2+" "+gananciaTabla2+" "+resultado2);

                if(Double.valueOf(gananciaTabla1)!= 0){

                    //CALCULA GANANCIA 
                    String ganancia1 = gananciaTabla1;
                    if(ganancia1.length() > 2)
                        ganancia1 = (Integer.valueOf(ganancia1.substring(0, ganancia1.length()-2))+1)+"."+ganancia1.substring(ganancia1.length()-2,ganancia1.length());
                    else if (ganancia1.length() == 2)
                        ganancia1 = "1."+ganancia1.substring(ganancia1.length()-2,ganancia1.length());
                    else if (ganancia1.length() == 1)
                        ganancia1 = "1.0"+ganancia1;
                    else
                        ganancia1 = "0";

                    Double precioVta1 = Math.ceil(Double.valueOf(precioCosto)*Double.valueOf(ganancia1)*Integer.valueOf(FormPrincipal.prop.getProperty("redondeo")));
                    precioVta1 = precioVta1 / Integer.valueOf(FormPrincipal.prop.getProperty("redondeo"));

                    resultado = precioVta1.toString();
                }

                if(Double.valueOf(gananciaTabla2)!= 0){

                    //CALCULA GANANCIA 
                    String ganancia2 = gananciaTabla2;
                    if(ganancia2.length() > 2)
                        ganancia2 = (Integer.valueOf(ganancia2.substring(0, ganancia2.length()-2))+1)+"."+ganancia2.substring(ganancia2.length()-2,ganancia2.length());
                    else if (ganancia2.length() == 2)
                        ganancia2 = "1."+ganancia2.substring(ganancia2.length()-2,ganancia2.length());
                    else if (ganancia2.length() == 1)
                        ganancia2 = "1.0"+ganancia2;
                    else
                        ganancia2 = "0";

                    Double precioVta2 = Math.ceil(Double.valueOf(precioCosto2)*Double.valueOf(ganancia2)*Integer.valueOf(FormPrincipal.prop.getProperty("redondeo")));
                    precioVta2 = precioVta2 / Integer.valueOf(FormPrincipal.prop.getProperty("redondeo"));

                    resultado2 = precioVta2.toString();
                }

                tabla.getModel().setValueAt(resultado, rowIndex, 5);
                tabla.getModel().setValueAt(resultado2, rowIndex, 8);
                tabla.getModel().setValueAt(true, rowIndex, 0);
                tabla.repaint();
            }
        };
        @SuppressWarnings("unused")
        TableCellListener tcl = new TableCellListener(tabla, action);
    }
    
     static class DecimalFormatRenderer extends DefaultTableCellRenderer {
        private static final DecimalFormat formatter = new DecimalFormat( "#.000" );

        public Component getTableCellRendererComponent(
                 JXTable table, Object value, boolean isSelected,
           boolean hasFocus, int row, int column) {

           // First format the cell value as required
           value = formatter.format((Number)value);

              // And pass it on to parent class

           return super.getTableCellRendererComponent(
              table, value, isSelected, hasFocus, row, column );
        }
     }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboFamilia;
    private javax.swing.JComboBox comboProveedor;
    private javax.swing.JComboBox comboSubfamilia;
    private javax.swing.JComboBox comboSucursal;
    private javax.swing.JComboBox comboUbicacion;
    private javax.swing.JButton jButton1;
    public static javax.swing.JButton jButtonBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEsquina;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextBuscar;
    private org.jdesktop.swingx.JXTable tabla;
    // End of variables declaration//GEN-END:variables

    private void dependenciaComboFamilia() {
        this.comboFamilia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                
                String[] familia    = comboFamilia.getSelectedItem().toString().split("-");
                List<Subfamilia> subfamilias=null;
                
                subfamilias = subfamiliaRepo.getAllByFamilia(Long.valueOf(familia[0]));
                
                comboSubfamilia.removeAllItems();
                comboSubfamilia.addItem("0-TODOS");
                for (Subfamilia b : subfamilias) {
                    comboSubfamilia.addItem(b.getId()+"-"+b.getNombre());
                }
                
                repaint();
                revalidate();
                if(!comboSubfamilia.getSelectedItem().toString().isEmpty() || !comboFamilia.getSelectedItem().toString().isEmpty())
                    poblarTabla(jTextBuscar.getText());
            }
        });
        
        this.comboSubfamilia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
//                if(!comboSubfamilia.getSelectedItem().toString().isEmpty())
//                    poblarTabla(jTextBuscar.getText());
            }
        });
        
        this.comboUbicacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                if(!comboUbicacion.getSelectedItem().toString().isEmpty())
                    poblarTabla(jTextBuscar.getText());
            }
        });
         
        this.comboProveedor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                if(!comboProveedor.getSelectedItem().toString().isEmpty())
                    poblarTabla(jTextBuscar.getText());
            }
        });
        
        this.comboSucursal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                if(!comboSucursal.getSelectedItem().toString().isEmpty())
                    poblarTabla(jTextBuscar.getText());
            }
        });
    }
}
